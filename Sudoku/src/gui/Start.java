/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.google.common.base.Stopwatch;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import matice.IMaticeRozsirena;
import sudoku.EObtiznost;
import sudoku.ISudoku;
import sudoku.Sudoku;

/**
 *
 * @author Oldřich
 */
public class Start extends javax.swing.JFrame {

    /**
     * Creates new form Start
     */
    private ISudoku<Character> sudoku;
    private Stopwatch stopky;
    public static DateFormat format = new SimpleDateFormat(":mm:ss");
    //private int hodiny = 0;

    public Start() {
        Double version = Double.parseDouble(System.getProperty("java.specification.version"));
        if (version<1.8) {
            System.out.println("update java!");
            System.exit(1);
        }
        
        initComponents();
        //addWindowListener( );
        stopky = Stopwatch.createUnstarted();
        sudoku = new Sudoku<>(znaky.EZnaky.BEZNE.vratPole(), znaky.EZnaky.BEZNE.vratPrazdno());
        mnNapoveda.setVisible(false);
        mniVyres.setVisible(false);
        Thread pocitadlo = new Thread(() -> {
            for (;;) {
                try {
                    prepocitejAZobraz();
                    najdiAOznacSpatne();
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    System.err.println("oh oh");
                }
            }
        });
        pocitadlo.setDaemon(true);
        pocitadlo.start();
    }

    private void najdiAOznacSpatne() {
        IMaticeRozsirena<Character> matice = pnlSudoku.vrat();
        int indexPrvku;
        for (int indexRadku = 0; indexRadku < matice.vratRozmer(); indexRadku++) {
            for (int indexSloupce = 0; indexSloupce < matice.vratRozmer(); indexSloupce++) {
                if (!matice.jePolePrazdne(indexRadku, indexSloupce)) {
                    indexPrvku = matice.vratIndexPrvku(indexRadku, indexSloupce);
                    matice.smaz(indexRadku, indexSloupce);
                    if (matice.existujeVRadku(indexRadku, indexPrvku) || matice.existujeVeSloupci(indexSloupce, indexPrvku) || matice.existujeVeCtverci(indexRadku, indexSloupce, indexPrvku)) {
                        matice.nastav(indexRadku, indexSloupce, indexPrvku);
                        pnlSudoku.nastavChybne(indexRadku, indexSloupce, true);
                    } else {
                        matice.nastav(indexRadku, indexSloupce, indexPrvku);
                        pnlSudoku.nastavChybne(indexRadku, indexSloupce, false);
                    }
                } else {
                    //matice.nastav(indexRadku, indexSloupce, indexPrvku);
                    pnlSudoku.nastavChybne(indexRadku, indexSloupce, false);
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        pnlOvladani = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblVyplneno = new javax.swing.JLabel();
        lblPrazdnych = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblHodiny = new javax.swing.JLabel();
        tgbtnPauza = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        pnlSudoku = new gui.pnlSudoku();
        mnbMenu = new javax.swing.JMenuBar();
        mnProgram = new javax.swing.JMenu();
        mniKonec = new javax.swing.JMenuItem();
        mnHra = new javax.swing.JMenu();
        mniNovaZGeneratoru = new javax.swing.JMenuItem();
        mnVlastni = new javax.swing.JMenu();
        mniPrazdne = new javax.swing.JMenuItem();
        mniNastavStale = new javax.swing.JMenuItem();
        mniUvolniStale = new javax.swing.JMenuItem();
        mniVyres = new javax.swing.JMenuItem();
        mniVycisti = new javax.swing.JMenuItem();
        mnNapoveda = new javax.swing.JMenu();
        mniPravidla = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sudoku");
        setMinimumSize(new java.awt.Dimension(300, 500));
        setPreferredSize(new java.awt.Dimension(680, 770));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        pnlOvladani.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Vyplněno:");

        lblVyplneno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblVyplneno.setForeground(new java.awt.Color(255, 0, 0));
        lblVyplneno.setText("99");

        lblPrazdnych.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPrazdnych.setForeground(new java.awt.Color(51, 0, 204));
        lblPrazdnych.setText("99");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Prázdných:");

        lblHodiny.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHodiny.setText("jLabel2");

        tgbtnPauza.setText("Pauza");
        tgbtnPauza.setEnabled(false);
        tgbtnPauza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tgbtnPauzaActionPerformed(evt);
            }
        });

        jButton1.setText("Reset stopek");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tgbtnPauza, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOvladaniLayout = new javax.swing.GroupLayout(pnlOvladani);
        pnlOvladani.setLayout(pnlOvladaniLayout);
        pnlOvladaniLayout.setHorizontalGroup(
            pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOvladaniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOvladaniLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVyplneno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPrazdnych))
                    .addGroup(pnlOvladaniLayout.createSequentialGroup()
                        .addComponent(lblHodiny)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tgbtnPauza, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );
        pnlOvladaniLayout.setVerticalGroup(
            pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOvladaniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblVyplneno)
                    .addComponent(lblPrazdnych)
                    .addComponent(jLabel4))
                .addGroup(pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOvladaniLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblHodiny))
                    .addGroup(pnlOvladaniLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlOvladaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(tgbtnPauza))))
                .addContainerGap())
        );

        pnlSudoku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlSudokuMouseClicked(evt);
            }
        });

        mnbMenu.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                mnbMenuPropertyChange(evt);
            }
        });

        mnProgram.setText("Program");

        mniKonec.setText("Konec");
        mniKonec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKonecActionPerformed(evt);
            }
        });
        mnProgram.add(mniKonec);

        mnbMenu.add(mnProgram);

        mnHra.setText("Hra");

        mniNovaZGeneratoru.setText("Nová hra z generátoru");
        mniNovaZGeneratoru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNovaZGeneratoruActionPerformed(evt);
            }
        });
        mnHra.add(mniNovaZGeneratoru);

        mnVlastni.setText("Vlastní hra");

        mniPrazdne.setText("Prázdné sudoku");
        mniPrazdne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPrazdneActionPerformed(evt);
            }
        });
        mnVlastni.add(mniPrazdne);

        mniNastavStale.setText("Nastav stálé");
        mniNastavStale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNastavStaleActionPerformed(evt);
            }
        });
        mnVlastni.add(mniNastavStale);

        mniUvolniStale.setText("Uvolni stálé");
        mniUvolniStale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUvolniStaleActionPerformed(evt);
            }
        });
        mnVlastni.add(mniUvolniStale);

        mnHra.add(mnVlastni);

        mniVyres.setText("Vyřes současné sudoku");
        mniVyres.setEnabled(false);
        mniVyres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniVyresActionPerformed(evt);
            }
        });
        mnHra.add(mniVyres);

        mniVycisti.setText("Vyčisti uživatelská pole");
        mniVycisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniVycistiActionPerformed(evt);
            }
        });
        mnHra.add(mniVycisti);

        mnbMenu.add(mnHra);

        mnNapoveda.setText("Nápověda");
        mnNapoveda.setEnabled(false);

        mniPravidla.setText("Pravidla");
        mnNapoveda.add(mniPravidla);

        jMenuItem1.setText("O programu");
        mnNapoveda.add(jMenuItem1);

        mnbMenu.add(mnNapoveda);

        setJMenuBar(mnbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlOvladani, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSudoku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSudoku, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOvladani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniNovaZGeneratoruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNovaZGeneratoruActionPerformed
        sudoku.generujNoveZadani(EObtiznost.SNADNE);
        pnlSudoku.smazVse();
        pnlSudoku.nastavStale(sudoku.getZadani());
        if (!stopky.isRunning()) {
            stopky.start();
        } else {
            stopky.reset();
            stopky.start();
        }
        tgbtnPauza.setEnabled(true);
    }//GEN-LAST:event_mniNovaZGeneratoruActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void mniKonecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKonecActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mniKonecActionPerformed

    private void mniPrazdneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPrazdneActionPerformed
        pnlSudoku.smazVse();
        sudoku.setUzivatel(pnlSudoku.vrat());
    }//GEN-LAST:event_mniPrazdneActionPerformed

    private void mniVyresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniVyresActionPerformed
        IMaticeRozsirena<Character> stale = pnlSudoku.vratStale();
        sudoku.setUzivatel(stale);
        sudoku.vyresSudoku();
        pnlSudoku.nastav(sudoku.getReseni());
        pnlSudoku.nastavStale(stale);
    }//GEN-LAST:event_mniVyresActionPerformed

    private void mniNastavStaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNastavStaleActionPerformed
        pnlSudoku.nastavVyplneneJakoStale();

        if (!stopky.isRunning()) {
            stopky.start();
        } else {
            stopky.reset();
            stopky.start();
        }
        tgbtnPauza.setEnabled(true);
    }//GEN-LAST:event_mniNastavStaleActionPerformed

    private void mniUvolniStaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUvolniStaleActionPerformed
        pnlSudoku.uvolniStale();
    }//GEN-LAST:event_mniUvolniStaleActionPerformed

    private void pnlSudokuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSudokuMouseClicked

    }//GEN-LAST:event_pnlSudokuMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void mnbMenuPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_mnbMenuPropertyChange

    }//GEN-LAST:event_mnbMenuPropertyChange

    private void tgbtnPauzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tgbtnPauzaActionPerformed
        if (tgbtnPauza.isSelected()) {
            stopky.stop();
            //pnlSudoku.setEnabled(false);

        } else {
           // pnlSudoku.setEnabled(true);
            if (!stopky.isRunning()) {
                stopky.start();
            } else {
                stopky.reset();
                stopky.start();
            }
        }
    }//GEN-LAST:event_tgbtnPauzaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        stopky.reset();
        tgbtnPauza.setSelected(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mniVycistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniVycistiActionPerformed
        IMaticeRozsirena<Character> stale = pnlSudoku.vratStale();
        pnlSudoku.smazVse();
        pnlSudoku.nastavStale(stale);
    }//GEN-LAST:event_mniVycistiActionPerformed
    private void prepocitejAZobraz() {
        IMaticeRozsirena<Character> vrat = pnlSudoku.vrat();
        lblPrazdnych.setText(Integer.toString(vrat.vratPocetPrazdnych()));
        lblVyplneno.setText(Integer.toString(vrat.vratPocetVyplnenych()));
        if (vrat.vratPocetPrazdnych() == 0) {
            JOptionPane.showMessageDialog(this, "Sudoku dokončeno", "Úspěch", JOptionPane.INFORMATION_MESSAGE);
            //tgbtnPauza.setSelected(true);
            //tgbtnPauzaActionPerformed(null);
            mniNovaZGeneratoruActionPerformed(null);
        }
        Date date = new Date(stopky.elapsed(TimeUnit.MILLISECONDS));

        //date.setHours(0);
        lblHodiny.setText(stopky.elapsed(TimeUnit.HOURS) + format.format(date));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lblHodiny;
    private javax.swing.JLabel lblPrazdnych;
    private javax.swing.JLabel lblVyplneno;
    private javax.swing.JMenu mnHra;
    private javax.swing.JMenu mnNapoveda;
    private javax.swing.JMenu mnProgram;
    private javax.swing.JMenu mnVlastni;
    private javax.swing.JMenuBar mnbMenu;
    private javax.swing.JMenuItem mniKonec;
    private javax.swing.JMenuItem mniNastavStale;
    private javax.swing.JMenuItem mniNovaZGeneratoru;
    private javax.swing.JMenuItem mniPravidla;
    private javax.swing.JMenuItem mniPrazdne;
    private javax.swing.JMenuItem mniUvolniStale;
    private javax.swing.JMenuItem mniVycisti;
    private javax.swing.JMenuItem mniVyres;
    private javax.swing.JPanel pnlOvladani;
    private gui.pnlSudoku pnlSudoku;
    private javax.swing.JToggleButton tgbtnPauza;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
